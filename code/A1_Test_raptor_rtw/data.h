/*****************************************************************************
   data.h
   Generated By:
   Raptor 2021b_2.0.14465 (6183)
   Matlab (R2021b) 9.11

   Copyright (c) 2018 New Eagle Products, Inc.
   All rights reserved.

   Code Generated at: Sun Jan  1 18:42:51 2023
 *****************************************************************************/

#ifndef __DATA_H
#define __DATA_H
#include "sdk_crc.h"
#include "rtwtypes.h"
#include "raptor_types.h"

/*  SS_DOUBLE  =  0,    / real32_T    /
   SS_SINGLE  =  1,    / real32_T    /
   SS_INT8    =  2,    / int8_T      /
   SS_UINT8   =  3,    / uint8_T     /
   SS_INT16   =  4,    / int16_T     /
   SS_UINT16  =  5,    / uint16_T    /
   SS_INT32   =  6,    / int32_T     /
   SS_UINT32  =  7,    / uint32_T    /
   SS_BOOLEAN =  8     / boolean_T  */
/***** RAM Variables *************************************************/
#define RAMVARIABLES

#pragma pack(1)

typedef struct {
  uint8_T INIT_RAM_Variables;
  boolean_T FgndTasksStopped;          /* Type : boolean_T, Storage : RAM,  */
  boolean_T KeySw_Bgnd;                /* Type : boolean_T, Storage : RAM,  */
  boolean_T KeepModuleOn;              /* Type : boolean_T, Storage : RAM,  */
  real32_T TTC;                        /* Type : real32_T, Storage : RAM,  */
  real32_T RR_new;                     /* Type : real32_T, Storage : RAM,  */
  real32_T Jx_HV_mps3;                 /* Type : real32_T, Storage : RAM,  */
  real32_T TH;                         /* Type : real32_T, Storage : RAM,  */
  boolean_T Acc_Mode;                  /* Type : boolean_T, Storage : RAM,  */
  real32_T Driving_Torque;             /* Type : real32_T, Storage : RAM,  */
  real32_T Braking_Pressure_RR;        /* Type : real32_T, Storage : RAM,  */
  real32_T VACCTargetVehAssigned_flg;  /* Type : real32_T, Storage : RAM,  */
  real32_T RR_est;                     /* Type : real32_T, Storage : RAM,  */
  real32_T RV_est;                     /* Type : real32_T, Storage : RAM,  */
  real32_T RA_est;                     /* Type : real32_T, Storage : RAM,  */
  real32_T cut_in_flg;                 /* Type : real32_T, Storage : RAM,  */
  real32_T RAx;                        /* Type : real32_T, Storage : RAM,  */
  real32_T RVx;                        /* Type : real32_T, Storage : RAM,  */
  real32_T RR;                         /* Type : real32_T, Storage : RAM,  */
  real32_T Jy_HV_mps3;                 /* Type : real32_T, Storage : RAM,  */
  real32_T C0;                         /* Type : real32_T, Storage : RAM,  */
  real32_T SW_Dynematic;               /* Type : real32_T, Storage : RAM,  */
  real32_T latched;                    /* Type : real32_T, Storage : RAM,  */
  real32_T Driving_Torque_b;           /* Type : real32_T, Storage : RAM,  */
  real32_T axc;                        /* Type : real32_T, Storage : RAM,  */
  real32_T TH_acc;                     /* Type : real32_T, Storage : RAM,  */
  real32_T Desired_distance;           /* Type : real32_T, Storage : RAM,  */
  real32_T Spd_acc;                    /* Type : real32_T, Storage : RAM,  */
  uint32_T EcuAddr_RAM;                /* Type : uint32_T, Storage : RAM,  */
  uint32_T UDSServerAddr_RAM;          /* Type : uint32_T, Storage : RAM,  */
  uint32_T UDSClientAddr_RAM;          /* Type : uint32_T, Storage : RAM,  */
  uint8_T EEPROM_State;                /* Type : uint8_T, Storage : RAM,  */
} RAMVariables_T;

#pragma pack()

extern RAMVariables_T RAMVariables __attribute__ ((section (".ramsymbols")));
extern void initRAMVariables(RAMVariables_T*);

/***** CONST Variables *************************************************/
#define CONSTVARIABLES

#pragma pack(1)

typedef struct {
  uint8_T const ModelName[7];          /* Type : uint8_T, Storage : CONST,  */
  uint32_T const BuildNumber;          /* Type : uint32_T, Storage : CONST,  */
  uint8_T const MatlabVersion[13];     /* Type : uint8_T, Storage : CONST,  */
  uint8_T const RaptorVersion[20];     /* Type : uint8_T, Storage : CONST,  */
  uint8_T const SwIdTxt[11];           /* Type : uint8_T, Storage : CONST,  */
  uint8_T const CalIdTxt[15];          /* Type : uint8_T, Storage : CONST,  */
  uint8_T const BuildUID[21];          /* Type : uint8_T, Storage : CONST,  */
  uint16_T const IdTableRev;           /* Type : uint16_T, Storage : CONST,  */
  uint32_T const HardwareType;         /* Type : uint32_T, Storage : CONST,  */
  uint8_T const DateStamp[20];         /* Type : uint8_T, Storage : CONST,  */
} CONSTVariables_T;

#pragma pack()

extern const CONSTVariables_T CONSTVariables;
extern void initCONSTVariables(const CONSTVariables_T*);
typedef enum {
  EE_INIT = 0,
  EE_LOADED_DEFAULTS = 1,
  EE_LOADED_DEFAULTS_AFTER_PROGRAMMING = 2,
  EE_LOADED_DEFAULTS_INCORRECT_CRC = 3,
  EE_LOADED_DEFAULTS_INCORRECT_EEID = 4,
  EE_LOADED_DEFAULTS_ERROR_READING = 5,
  EE_LOADED_DEFAULTS_FAILED_DRV_INIT = 6,
  EE_LOADED_SAVED_VALUES_AFTER_PROGRAMMING = 7,
  EE_LOADED_SAVED_VALUES = 8,
  EE_LOADED_BACKUP_VALUES = 9,
  EE_STORE_IN_PROGESS = 10,
  EE_STORE_FAILED = 11,
  EE_STORE_SUCCESS = 12,
} EE_STATES;

/***** EE Variables *************************************************/
#define EEVARIABLES

#pragma pack(1)

typedef struct {
  uint32_T EE_UniqID;
  real32_T KeySwHiTimeThr;             /* Type : real32_T, Storage : CAL */
  real32_T KeySwLoTimeThr;             /* Type : real32_T, Storage : CAL */
  real32_T UseTTC_switch;              /* Type : real32_T, Storage : CAL */
  real32_T ACCSetSpeed_kph;            /* Type : real32_T, Storage : CAL */
  real32_T Est_switch;                 /* Type : real32_T, Storage : CAL */
  real32_T OnlyPY_signal;              /* Type : real32_T, Storage : CAL */
  real32_T Cut_in_Secenary_flg;        /* Type : real32_T, Storage : CAL */
  real32_T Kalman_trig;                /* Type : real32_T, Storage : CAL */
  real32_T Long_trig;                  /* Type : real32_T, Storage : CAL */
  real32_T Q_th;                       /* Type : real32_T, Storage : CAL */
  real32_T R_th;                       /* Type : real32_T, Storage : CAL */
  real32_T Q_acc;                      /* Type : real32_T, Storage : CAL */
  real32_T R_acc;                      /* Type : real32_T, Storage : CAL */
  real32_T Path_selector;              /* Type : real32_T, Storage : CAL */
  real32_T V;                          /* Type : real32_T, Storage : CAL */
  boolean_T Lat_trig;                  /* Type : boolean_T, Storage : CAL */
  real32_T Q_D;                        /* Type : real32_T, Storage : CAL */
  real32_T R_D;                        /* Type : real32_T, Storage : CAL */
  real32_T Q_K;                        /* Type : real32_T, Storage : CAL */
  real32_T R_K;                        /* Type : real32_T, Storage : CAL */
  real32_T LaneAvail_flg;              /* Type : real32_T, Storage : CAL */
  uint32_T CAN1__XCP_BC_ID;            /* Type : uint32_T, Storage : CAL */
  uint32_T CAN1__XCP_RX_ID;            /* Type : uint32_T, Storage : CAL */
  uint32_T CAN1__XCP_TX_ID;            /* Type : uint32_T, Storage : CAL */
  uint16_T CAN1__XCP_Security;         /* Type : uint16_T, Storage : CAL */
  uint16_T CRC;
} EEVariables_T;

#pragma pack()

extern const EEVariables_T EEVariables_DEFAULT;
extern EEVariables_T EEVariables_RAMShadow;
extern void App_EE_Store(void);
extern void App_EE_Defaults(void);

/***** #DEFINES Accessors *************************************************/
#define FgndTasksStopped_Data()        (RAMVariables.FgndTasksStopped)
#define FgndTasksStopped_Ptr()         (&(RAMVariables.FgndTasksStopped))
#define FgndTasksStopped_ELEMENTS()    (1 * 1)
#define KeySwHiTimeThr_Data()          (EEVariables_RAMShadow.KeySwHiTimeThr)
#define KeySwHiTimeThr_Ptr()           (&(EEVariables_RAMShadow.KeySwHiTimeThr))
#define KeySwHiTimeThr_ELEMENTS()      (1 * 1)
#define KeySwLoTimeThr_Data()          (EEVariables_RAMShadow.KeySwLoTimeThr)
#define KeySwLoTimeThr_Ptr()           (&(EEVariables_RAMShadow.KeySwLoTimeThr))
#define KeySwLoTimeThr_ELEMENTS()      (1 * 1)
#define KeySw_Bgnd_Data()              (RAMVariables.KeySw_Bgnd)
#define KeySw_Bgnd_Ptr()               (&(RAMVariables.KeySw_Bgnd))
#define KeySw_Bgnd_ELEMENTS()          (1 * 1)
#define KeepModuleOn_Data()            (RAMVariables.KeepModuleOn)
#define KeepModuleOn_Ptr()             (&(RAMVariables.KeepModuleOn))
#define KeepModuleOn_ELEMENTS()        (1 * 1)
#define UseTTC_switch_Data()           (EEVariables_RAMShadow.UseTTC_switch)
#define UseTTC_switch_Ptr()            (&(EEVariables_RAMShadow.UseTTC_switch))
#define UseTTC_switch_ELEMENTS()       (1 * 1)
#define ACCSetSpeed_kph_Data()         (EEVariables_RAMShadow.ACCSetSpeed_kph)
#define ACCSetSpeed_kph_Ptr()          (&(EEVariables_RAMShadow.ACCSetSpeed_kph))
#define ACCSetSpeed_kph_ELEMENTS()     (1 * 1)
#define Est_switch_Data()              (EEVariables_RAMShadow.Est_switch)
#define Est_switch_Ptr()               (&(EEVariables_RAMShadow.Est_switch))
#define Est_switch_ELEMENTS()          (1 * 1)
#define OnlyPY_signal_Data()           (EEVariables_RAMShadow.OnlyPY_signal)
#define OnlyPY_signal_Ptr()            (&(EEVariables_RAMShadow.OnlyPY_signal))
#define OnlyPY_signal_ELEMENTS()       (1 * 1)
#define Cut_in_Secenary_flg_Data()     (EEVariables_RAMShadow.Cut_in_Secenary_flg)
#define Cut_in_Secenary_flg_Ptr()      (&(EEVariables_RAMShadow.Cut_in_Secenary_flg))
#define Cut_in_Secenary_flg_ELEMENTS() (1 * 1)
#define Kalman_trig_Data()             (EEVariables_RAMShadow.Kalman_trig)
#define Kalman_trig_Ptr()              (&(EEVariables_RAMShadow.Kalman_trig))
#define Kalman_trig_ELEMENTS()         (1 * 1)
#define Long_trig_Data()               (EEVariables_RAMShadow.Long_trig)
#define Long_trig_Ptr()                (&(EEVariables_RAMShadow.Long_trig))
#define Long_trig_ELEMENTS()           (1 * 1)
#define Q_th_Data()                    (EEVariables_RAMShadow.Q_th)
#define Q_th_Ptr()                     (&(EEVariables_RAMShadow.Q_th))
#define Q_th_ELEMENTS()                (1 * 1)
#define R_th_Data()                    (EEVariables_RAMShadow.R_th)
#define R_th_Ptr()                     (&(EEVariables_RAMShadow.R_th))
#define R_th_ELEMENTS()                (1 * 1)
#define Q_acc_Data()                   (EEVariables_RAMShadow.Q_acc)
#define Q_acc_Ptr()                    (&(EEVariables_RAMShadow.Q_acc))
#define Q_acc_ELEMENTS()               (1 * 1)
#define R_acc_Data()                   (EEVariables_RAMShadow.R_acc)
#define R_acc_Ptr()                    (&(EEVariables_RAMShadow.R_acc))
#define R_acc_ELEMENTS()               (1 * 1)
#define TTC_Data()                     (RAMVariables.TTC)
#define TTC_Ptr()                      (&(RAMVariables.TTC))
#define TTC_ELEMENTS()                 (1 * 1)
#define RR_new_Data()                  (RAMVariables.RR_new)
#define RR_new_Ptr()                   (&(RAMVariables.RR_new))
#define RR_new_ELEMENTS()              (1 * 1)
#define Jx_HV_mps3_Data()              (RAMVariables.Jx_HV_mps3)
#define Jx_HV_mps3_Ptr()               (&(RAMVariables.Jx_HV_mps3))
#define Jx_HV_mps3_ELEMENTS()          (1 * 1)
#define TH_Data()                      (RAMVariables.TH)
#define TH_Ptr()                       (&(RAMVariables.TH))
#define TH_ELEMENTS()                  (1 * 1)
#define Acc_Mode_Data()                (RAMVariables.Acc_Mode)
#define Acc_Mode_Ptr()                 (&(RAMVariables.Acc_Mode))
#define Acc_Mode_ELEMENTS()            (1 * 1)
#define Driving_Torque_Data()          (RAMVariables.Driving_Torque)
#define Driving_Torque_Ptr()           (&(RAMVariables.Driving_Torque))
#define Driving_Torque_ELEMENTS()      (1 * 1)
#define Braking_Pressure_RR_Data()     (RAMVariables.Braking_Pressure_RR)
#define Braking_Pressure_RR_Ptr()      (&(RAMVariables.Braking_Pressure_RR))
#define Braking_Pressure_RR_ELEMENTS() (1 * 1)
#define VACCTargetVehAssigned_flg_Data() (RAMVariables.VACCTargetVehAssigned_flg)
#define VACCTargetVehAssigned_flg_Ptr() (&(RAMVariables.VACCTargetVehAssigned_flg))
#define VACCTargetVehAssigned_flg_ELEMENTS() (1 * 1)
#define RR_est_Data()                  (RAMVariables.RR_est)
#define RR_est_Ptr()                   (&(RAMVariables.RR_est))
#define RR_est_ELEMENTS()              (1 * 1)
#define RV_est_Data()                  (RAMVariables.RV_est)
#define RV_est_Ptr()                   (&(RAMVariables.RV_est))
#define RV_est_ELEMENTS()              (1 * 1)
#define RA_est_Data()                  (RAMVariables.RA_est)
#define RA_est_Ptr()                   (&(RAMVariables.RA_est))
#define RA_est_ELEMENTS()              (1 * 1)
#define cut_in_flg_Data()              (RAMVariables.cut_in_flg)
#define cut_in_flg_Ptr()               (&(RAMVariables.cut_in_flg))
#define cut_in_flg_ELEMENTS()          (1 * 1)
#define RAx_Data()                     (RAMVariables.RAx)
#define RAx_Ptr()                      (&(RAMVariables.RAx))
#define RAx_ELEMENTS()                 (1 * 1)
#define RVx_Data()                     (RAMVariables.RVx)
#define RVx_Ptr()                      (&(RAMVariables.RVx))
#define RVx_ELEMENTS()                 (1 * 1)
#define RR_Data()                      (RAMVariables.RR)
#define RR_Ptr()                       (&(RAMVariables.RR))
#define RR_ELEMENTS()                  (1 * 1)
#define Jy_HV_mps3_Data()              (RAMVariables.Jy_HV_mps3)
#define Jy_HV_mps3_Ptr()               (&(RAMVariables.Jy_HV_mps3))
#define Jy_HV_mps3_ELEMENTS()          (1 * 1)
#define Path_selector_Data()           (EEVariables_RAMShadow.Path_selector)
#define Path_selector_Ptr()            (&(EEVariables_RAMShadow.Path_selector))
#define Path_selector_ELEMENTS()       (1 * 1)
#define C0_Data()                      (RAMVariables.C0)
#define C0_Ptr()                       (&(RAMVariables.C0))
#define C0_ELEMENTS()                  (1 * 1)
#define V_Data()                       (EEVariables_RAMShadow.V)
#define V_Ptr()                        (&(EEVariables_RAMShadow.V))
#define V_ELEMENTS()                   (1 * 1)
#define Lat_trig_Data()                (EEVariables_RAMShadow.Lat_trig)
#define Lat_trig_Ptr()                 (&(EEVariables_RAMShadow.Lat_trig))
#define Lat_trig_ELEMENTS()            (1 * 1)
#define Q_D_Data()                     (EEVariables_RAMShadow.Q_D)
#define Q_D_Ptr()                      (&(EEVariables_RAMShadow.Q_D))
#define Q_D_ELEMENTS()                 (1 * 1)
#define R_D_Data()                     (EEVariables_RAMShadow.R_D)
#define R_D_Ptr()                      (&(EEVariables_RAMShadow.R_D))
#define R_D_ELEMENTS()                 (1 * 1)
#define Q_K_Data()                     (EEVariables_RAMShadow.Q_K)
#define Q_K_Ptr()                      (&(EEVariables_RAMShadow.Q_K))
#define Q_K_ELEMENTS()                 (1 * 1)
#define R_K_Data()                     (EEVariables_RAMShadow.R_K)
#define R_K_Ptr()                      (&(EEVariables_RAMShadow.R_K))
#define R_K_ELEMENTS()                 (1 * 1)
#define SW_Dynematic_Data()            (RAMVariables.SW_Dynematic)
#define SW_Dynematic_Ptr()             (&(RAMVariables.SW_Dynematic))
#define SW_Dynematic_ELEMENTS()        (1 * 1)
#define latched_Data()                 (RAMVariables.latched)
#define latched_Ptr()                  (&(RAMVariables.latched))
#define latched_ELEMENTS()             (1 * 1)
#define Driving_Torque_b_Data()        (RAMVariables.Driving_Torque_b)
#define Driving_Torque_b_Ptr()         (&(RAMVariables.Driving_Torque_b))
#define Driving_Torque_b_ELEMENTS()    (1 * 1)
#define axc_Data()                     (RAMVariables.axc)
#define axc_Ptr()                      (&(RAMVariables.axc))
#define axc_ELEMENTS()                 (1 * 1)
#define TH_acc_Data()                  (RAMVariables.TH_acc)
#define TH_acc_Ptr()                   (&(RAMVariables.TH_acc))
#define TH_acc_ELEMENTS()              (1 * 1)
#define Desired_distance_Data()        (RAMVariables.Desired_distance)
#define Desired_distance_Ptr()         (&(RAMVariables.Desired_distance))
#define Desired_distance_ELEMENTS()    (1 * 1)
#define Spd_acc_Data()                 (RAMVariables.Spd_acc)
#define Spd_acc_Ptr()                  (&(RAMVariables.Spd_acc))
#define Spd_acc_ELEMENTS()             (1 * 1)
#define LaneAvail_flg_Data()           (EEVariables_RAMShadow.LaneAvail_flg)
#define LaneAvail_flg_Ptr()            (&(EEVariables_RAMShadow.LaneAvail_flg))
#define LaneAvail_flg_ELEMENTS()       (1 * 1)
#define CAN1__XCP_BC_ID_Data()         (EEVariables_RAMShadow.CAN1__XCP_BC_ID)
#define CAN1__XCP_BC_ID_Ptr()          (&(EEVariables_RAMShadow.CAN1__XCP_BC_ID))
#define CAN1__XCP_BC_ID_ELEMENTS()     (1 * 1)
#define CAN1__XCP_RX_ID_Data()         (EEVariables_RAMShadow.CAN1__XCP_RX_ID)
#define CAN1__XCP_RX_ID_Ptr()          (&(EEVariables_RAMShadow.CAN1__XCP_RX_ID))
#define CAN1__XCP_RX_ID_ELEMENTS()     (1 * 1)
#define CAN1__XCP_TX_ID_Data()         (EEVariables_RAMShadow.CAN1__XCP_TX_ID)
#define CAN1__XCP_TX_ID_Ptr()          (&(EEVariables_RAMShadow.CAN1__XCP_TX_ID))
#define CAN1__XCP_TX_ID_ELEMENTS()     (1 * 1)
#define ModelName_Data()               (CONSTVariables.ModelName)
#define ModelName_Ptr()                (&(CONSTVariables.ModelName))
#define ModelName_ELEMENTS()           (1 * 7)
#define BuildNumber_Data()             (CONSTVariables.BuildNumber)
#define BuildNumber_Ptr()              (&(CONSTVariables.BuildNumber))
#define BuildNumber_ELEMENTS()         (1 * 1)
#define MatlabVersion_Data()           (CONSTVariables.MatlabVersion)
#define MatlabVersion_Ptr()            (&(CONSTVariables.MatlabVersion))
#define MatlabVersion_ELEMENTS()       (1 * 13)
#define RaptorVersion_Data()           (CONSTVariables.RaptorVersion)
#define RaptorVersion_Ptr()            (&(CONSTVariables.RaptorVersion))
#define RaptorVersion_ELEMENTS()       (1 * 20)
#define SwIdTxt_Data()                 (CONSTVariables.SwIdTxt)
#define SwIdTxt_Ptr()                  (&(CONSTVariables.SwIdTxt))
#define SwIdTxt_ELEMENTS()             (1 * 11)
#define CalIdTxt_Data()                (CONSTVariables.CalIdTxt)
#define CalIdTxt_Ptr()                 (&(CONSTVariables.CalIdTxt))
#define CalIdTxt_ELEMENTS()            (1 * 15)
#define BuildUID_Data()                (CONSTVariables.BuildUID)
#define BuildUID_Ptr()                 (&(CONSTVariables.BuildUID))
#define BuildUID_ELEMENTS()            (1 * 21)
#define IdTableRev_Data()              (CONSTVariables.IdTableRev)
#define IdTableRev_Ptr()               (&(CONSTVariables.IdTableRev))
#define IdTableRev_ELEMENTS()          (1 * 1)
#define HardwareType_Data()            (CONSTVariables.HardwareType)
#define HardwareType_Ptr()             (&(CONSTVariables.HardwareType))
#define HardwareType_ELEMENTS()        (1 * 1)
#define EcuAddr_RAM_Data()             (RAMVariables.EcuAddr_RAM)
#define EcuAddr_RAM_Ptr()              (&(RAMVariables.EcuAddr_RAM))
#define EcuAddr_RAM_ELEMENTS()         (1 * 1)
#define UDSServerAddr_RAM_Data()       (RAMVariables.UDSServerAddr_RAM)
#define UDSServerAddr_RAM_Ptr()        (&(RAMVariables.UDSServerAddr_RAM))
#define UDSServerAddr_RAM_ELEMENTS()   (1 * 1)
#define UDSClientAddr_RAM_Data()       (RAMVariables.UDSClientAddr_RAM)
#define UDSClientAddr_RAM_Ptr()        (&(RAMVariables.UDSClientAddr_RAM))
#define UDSClientAddr_RAM_ELEMENTS()   (1 * 1)
#define DateStamp_Data()               (CONSTVariables.DateStamp)
#define DateStamp_Ptr()                (&(CONSTVariables.DateStamp))
#define DateStamp_ELEMENTS()           (1 * 20)
#define CAN1__XCP_Security_Data()      (EEVariables_RAMShadow.CAN1__XCP_Security)
#define CAN1__XCP_Security_Ptr()       (&(EEVariables_RAMShadow.CAN1__XCP_Security))
#define CAN1__XCP_Security_ELEMENTS()  (1 * 1)
#define EEPROM_State_Data()            (RAMVariables.EEPROM_State)
#define EEPROM_State_Ptr()             (&(RAMVariables.EEPROM_State))
#define EEPROM_State_ELEMENTS()        (1 * 1)
#define NonVolatileCRC_Data()          (EEVariables_RAMShadow.CRC)
#define NonVolatileCRC_Ptr()           (&(EEVariables_RAMShadow.CRC))

/***** CAL Locator ********************************************************/
#define CALLOC_START                   ((void*)KeySwHiTimeThr_Ptr())
#define CALLOC_LENGTH                  ( sizeof(KeySwHiTimeThr_Data()) + sizeof(KeySwLoTimeThr_Data()) + sizeof(UseTTC_switch_Data()) + sizeof(ACCSetSpeed_kph_Data()) + sizeof(Est_switch_Data()) + sizeof(OnlyPY_signal_Data()) + sizeof(Cut_in_Secenary_flg_Data()) + sizeof(Kalman_trig_Data()) + sizeof(Long_trig_Data()) + sizeof(Q_th_Data()) + sizeof(R_th_Data()) + sizeof(Q_acc_Data()) + sizeof(R_acc_Data()) + sizeof(Path_selector_Data()) + sizeof(V_Data()) + sizeof(Lat_trig_Data()) + sizeof(Q_D_Data()) + sizeof(R_D_Data()) + sizeof(Q_K_Data()) + sizeof(R_K_Data()) + sizeof(LaneAvail_flg_Data()) + sizeof(CAN1__XCP_BC_ID_Data()) + sizeof(CAN1__XCP_RX_ID_Data()) + sizeof(CAN1__XCP_TX_ID_Data()) + sizeof(CAN1__XCP_Security_Data()) + 0)
#endif
